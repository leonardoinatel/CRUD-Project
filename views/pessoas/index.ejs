<% include ../partials/header.ejs %>

<h1>Pessoas</h1>
<p>
    <div class="btn-group" role="group" aria-label="Basic example">
        <a type="button" class="btn btn-secondary" href="/pessoas/create">Nova Pessoa</a>
    </div>  
</p>
<table class="table table-striped table-bordered table-hover" id="cadastroid">
    <thead class="thead-dark">
        <tr>
            <th scope="col" onclick="sortTable(0)">Nome</th>
            <th scope="col" onclick="sortTable(1)">cargo</th>
            <th scope="col">Nascimento</th>
            <th scope="col">Ações</th>
        </tr>
    </thead>
    <% pessoas.map( pessoa => { %>
    <tr>
        <td><%= pessoa.nome %></td>
        <td>
            <%= pessoa.cargo %>
        </td>
        <td>
            <%= pessoa.nascimento %>
        </td>
        <td>
            <div class="btn-group" role="group" aria-label="Basic example">
                <a type="button" class="btn btn-secondary" href="/pessoas/update/<%= pessoa.id %>" >Editar</a>
                <a type="button" class="btn btn-secondary" href="/pessoas/delete/<%= pessoa.id %>" onclick="return confirm('Deseja realmente excluir')">Excluir</a>
            </div>  
        </td>
    </tr>
    <% }) %>
</table>

<% include ../partials/footer.ejs %>
<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("cadastroid");
        switching = true;
        // Set the sorting direction to ascending:
        dir = "asc";
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
        // Start by saying: no switching is done:
        switching = false;
        rows = table.rows;
        /* Loop through all table rows (except the
        first, which contains table headers): */
        for (i = 1; i < (rows.length - 1); i++) {
            // Start by saying there should be no switching:
            shouldSwitch = false;
            /* Get the two elements you want to compare,
            one from current row and one from the next: */
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            /* Check if the two rows should switch place,
            based on the direction, asc or desc: */
            if (dir == "asc") {
            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                // If so, mark as a switch and break the loop:
                shouldSwitch = true;
                break;
            }
            } else if (dir == "desc") {
            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                // If so, mark as a switch and break the loop:
                shouldSwitch = true;
                break;
            }
            }
        }
        if (shouldSwitch) {
            /* If a switch has been marked, make the switch
            and mark that a switch has been done: */
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            // Each time a switch is done, increase this count by 1:
            switchcount ++;
        } else {
            /* If no switching has been done AND the direction is "asc",
            set the direction to "desc" and run the while loop again. */
            if (switchcount == 0 && dir == "asc") {
            dir = "desc";
            switching = true;
            }
        }
        }
    }
</script>